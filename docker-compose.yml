version: '3.4'

services:
  php-fpm:
    build:
      context: ./layers/php-fpm
      dockerfile: Dockerfile
      args:
        - WEB_ROOT_PATH=${WEB_ROOT_PATH}
    container_name: ${COMPOSE_PROJECT_NAME}_php
    volumes:
      - ./app:${WEB_ROOT_PATH}
      - ./layers/php-fpm/ini_files/php.ini:/usr/local/etc/php/php.ini
      - ./layers/php-fpm/ini_files/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
      - ./layers/php-fpm/ini_files/tzone.ini:/usr/local/etc/php/conf.d/tzone.ini
    ports:
      - ${PHP_PORT}
    environment:
      - DB_HOST=${DB_HOST}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DB_DATABASE=${DB_DATABASE}
      - WEB_PORT=${WEB_PORT}
      - WEB_ROOT_PATH=${WEB_ROOT_PATH}
      - TZ=${TZ}
      - DOMAIN=${DOMAIN}
      - MAIL_SERVICE_PORT=${MAILHOG_SMTP_INTERNAL}
    networks:
      backend:
        aliases:
          - php

  database_manager:
    image: phpmyadmin/phpmyadmin:latest
    container_name: ${COMPOSE_PROJECT_NAME}_db_manager
    volumes:
      - ./layers/database_manager/config.user.inc.php:/etc/phpmyadmin/config.user.inc.php
    ports:
      - ${DB_MANAGER_PORT}:80
    environment:
      - DB_HOST=${DB_HOST}
      - TZ=${TZ}
    networks:
      - backend

  mailhog:
    image: mailhog/mailhog:latest
    container_name: ${COMPOSE_PROJECT_NAME}_mailhog
    expose:
      - ${MAILHOG_SMTP_INTERNAL}
    ports:
      - ${MAILHOG_UI_EXTERNAL}:${MAILHOG_UI_INTERNAL}
    networks:
      - backend

networks:
  backend:
